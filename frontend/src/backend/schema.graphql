mutation login($nameOrEmail: String!, $password: String!) {
  login(input: { identity: $nameOrEmail, password: $password })
}

mutation signup(
  $name: String!
  $password: String!
  $email: String
  $avatar: String
) {
  register(
    input: { name: $name, password: $password, email: $email, avatar: $avatar }
  ) {
    ...UserCommon
  }
}

query self {
  self {
    ...UserCommon
  }
}

mutation createNote($title: String!, $content: String!) {
  createNote(input: { title: $title, content: $content }) {
    ...NoteCommon
  }
}

query listNotes(
  $first: Int
  $after: String
  $filter: NoteFilter
  $sorting: [Sorting!]
) {
  listNotes(first: $first, after: $after, filter: $filter, sorting: $sorting) {
    hasPreviousPage
    hasNextPage
    edges {
      cursor
      node {
        ...NoteCommon
      }
    }
  }
}

fragment UserCommon on User {
  id
  name
  email
  avatar
}

fragment NoteCommon on Note {
  id
  title
  content
  createdAt
  updatedAt
  deletedAt
}
