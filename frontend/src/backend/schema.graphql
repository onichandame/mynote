mutation login($nameOrEmail: String!, $password: String!) {
  login(input: { identity: $nameOrEmail, password: $password })
}

mutation signup(
  $name: String!
  $password: String!
  $email: String
  $avatar: String
) {
  signup(
    input: { name: $name, password: $password, email: $email, avatar: $avatar }
  ) {
    ...UserCommon
  }
}

mutation changePassword($oldPass: String!, $newPass: String!) {
  changePassword(oldPassword: $oldPass, newPassword: $newPass)
}

mutation updateSelf($name: String, $email: String, $avatar: String) {
  updateSelf: updateUser(
    update: { name: $name, email: $email, avatar: $avatar }
  ) {
    ...UserCommon
  }
}

query self {
  self {
    ...UserCommon
  }
}

mutation createNote($title: String!, $content: String!) {
  createNote(input: { title: $title, content: $content }) {
    ...NoteCommon
  }
}

query listNotes(
  $first: Int
  $after: String
  $filter: NoteFilter
  $sorting: [Sorting!]
) {
  listNotes(first: $first, after: $after, filter: $filter, sorting: $sorting) {
    pageInfo {
      hasPreviousPage
      hasNextPage
    }
    edges {
      cursor
      node {
        ...NoteCommon
      }
    }
  }
}

query getNote($id: Int!) {
  getNote(id: $id) {
    ...NoteCommon
  }
}

mutation deleteNote($id: Int!) {
  deleteNote(id: $id)
}

mutation updateNote($id: Int!, $title: String, $content: String) {
  updateNote(id: $id, update: { title: $title, content: $content }) {
    ...NoteCommon
  }
}

fragment UserCommon on User {
  id
  name
  email
  avatar
}

fragment NoteCommon on Note {
  id
  title
  content
  createdAt
  updatedAt
  deletedAt
}
