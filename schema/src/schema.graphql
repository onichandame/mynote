query validatePassword($password: String!) {
  validatePassword(password: $password)
}

mutation login($input: LoginInput!) {
  login(input: $input)
}

mutation createUser($input: UserInput!) {
  createUser(input: $input) {
    ...UserCommon
  }
}

mutation updateUsers($filter: UserFilter, $update: UserUpdate!) {
  updateUsers(filter: $filter, update: $update)
}

query listUsers {
  listUsers {
    edges {
      node {
        ...UserCommon
      }
    }
  }
}

mutation createNote($input: NoteInput!) {
  createNote(input: $input) {
    ...NoteCommon
  }
}

query listNotes(
  $paging: Pagination
  $filter: NoteFilter
  $sorting: [NoteSort!]
) {
  listNotes(paging: $paging, filter: $filter, sorting: $sorting) {
    pageInfo {
      hasPreviousPage
      hasNextPage
    }
    edges {
      cursor
      node {
        ...NoteCommon
      }
    }
  }
}

mutation deleteNotes($filter: NoteFilter!) {
  deleteNotes(filter: $filter)
}

mutation updateNotes($filter: NoteFilter, $update: NoteUpdate!) {
  updateNotes(filter: $filter, update: $update)
}

subscription streamNotes {
  streamNotes {
    ...NoteCommon
  }
}

mutation syncFromRemote($url: String!,$identity:String!,$password:String!) {
  syncFromRemote(url: $url)
}

fragment UserCommon on User {
  id
  name
  email
  avatar
}

fragment NoteCommon on Note {
  id
  uuid
  lamportClock
  userId
  title
  content
  createdAt
  updatedAt
  deletedAt
}
